<project name="groovytools-builder" default="debug build" basedir=".">
	<property environment="env"/>

	<property name="name" value="groovytools-builder" />
	<property name="version" value="1.0.0" />

	<path id="build.classpath">
		<pathelement path="src"/>
		<pathelement path="test"/>
		<pathelement path="build/classes"/>

		<fileset dir="lib">
			<include name="*.jar"/>
			<exclude name="${name}*.jar" />
		</fileset>

	</path>

	<path id="test.classpath">
		<pathelement path="src"/>
		<pathelement path="test"/>
		<pathelement path="build/test"/>

		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>

	</path>

    <taskdef name="groovyc"
         classname="org.codehaus.groovy.ant.Groovyc"
                  classpathref="test.classpath"/>

    <taskdef name="groovy"
         classname="org.codehaus.groovy.ant.Groovy"
                  classpathref="test.classpath"/>

	<target name="properties" unless="properties.done" >
		<property name="properties.done" value="true"/>

		<tstamp/>
		<property name="tstamp" value="${DSTAMP}-${TSTAMP}" />


		<property name="release.name" value="${name}-${version}" />
		<property name="lib.dir" value="lib" />
		<property name="build.dir" value="build" />
		<property name="builder.jar.name" value="${release.name}.jar" />
		<property name="javac.src.dir" value="src" />
		<property name="javac.dest.dir" value="build/classes" />
		<property name="javac.test.dir" value="build/test" />
		<property name="javadoc.dest.dir" value="doc/api" />
		<property name="javadoc.fullname" value="groovytools - builder" />
		<property name="copyright.year" value="2008" />

	</target>

	<target name="clean" depends="properties">
		<delete failonerror="false" includeEmptyDirs="true">
			<fileset dir="${javac.dest.dir}">
				<include name="*/**" />
			</fileset>
		</delete>
	</target>

	<target name="compile" depends="properties">
		<mkdir dir="build/classes"/>
		<javac destdir="${javac.dest.dir}" includeAntRuntime="false" debug="${javac.debug}" optimize="${javac.optimize}" srcDir="${javac.src.dir}">
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<target name="test" depends="properties">
		<mkdir dir="build/test"/>
		<delete failonerror="false" includeEmptyDirs="true">
			<fileset dir="${javac.test.dir}">
				<include name="**/*.class" />
			</fileset>
		</delete>
        <groovyc srcdir="test" destdir="${javac.test.dir}" classpathref="test.classpath" fork="true"/>
        <groovy src="test/MetaBuilderTestSuite.groovy">
            <classpath>
                <pathelement path="test"/>
                <pathelement path="${javac.test.dir}"/>

                <fileset dir="lib">
                    <include name="*.jar"/>
                </fileset>

            </classpath>
        </groovy>
            
    </target>

	<target name="debug" depends="properties">
			<property name="javac.debug" value="on" />

			<antcall target="compile" />
	</target>

    <target name="copyResources" depends="properties">
        <copy todir="${javac.dest.dir}">
            <fileset dir="${javac.src.dir}" includes="**/*.properties" />
        </copy>
    </target>

	<target name="buildJar" depends="properties,copyResources"
            description="Builds a jar">
		<mkdir dir="${lib.dir}"/>
		<jar jarfile="${lib.dir}/${builder.jar.name}">
			<fileset dir="${javac.dest.dir}"/>
            <include name="groovytools/builder/**"/>
		</jar>
	</target>

	<target name="build" depends="properties">
		<antcall target="clean" />

		<antcall target="compile" />

		<antcall target="buildJar" />
	</target>

	<target name="build-g" depends="properties">
		<property name="javac.type" value="-g" />

		<antcall target="clean" />

		<antcall target="debug" />

		<antcall target="buildJar" />
	</target>

	<path id="javadocPath">
		<pathelement path="src"/>
		<pathelement path="build/classes"/>
	</path>

    <target name="javadoc" depends="properties" 
        description="Generates the project's API documentation" >
        <mkdir dir="${javadoc.dest.dir}"/>
        
        <javadoc        
            sourcepath="${javac.src.dir}" 
            packagenames="groovytools.builder.*"
            destdir="${javadoc.dest.dir}"         
            author="true"
            private="false"
            version="true"
            use="true"
            windowtitle="${javadoc.fullname} API ${version}"
            doctitle="${javadoc.fullname} API ${version}"
            bottom="Copyright &amp;#169; ${copyright.year} FoundryLogic, LLC. All Rights Reserved."
        >
            <classpath refid="build.classpath"/>
            <link
                href="http://groovy.codehaus.org/gapi"
                packagelistLoc="doc/groovy"
                offline="true"
                resolveLink="true"/>
            <link href="http://java.sun.com/javase/6/docs/api" resolveLink="true"/>
        </javadoc>
    </target>

	<target name="export" depends="properties">
		<delete dir="${release.name}"/>
		<mkdir dir="${release.name}"/>

		<exec executable="svn">
			<arg value="export"/>
			<arg value="--force"/>
			<arg value="."/>
			<arg value="${release.name}"/>
		</exec>
	</target>

	<target name="release" depends="properties">
		<echo message="Building release - check the version: ${version}"/>
		<antcall target="export"/>
		<ant inheritAll="false" dir="${release.name}" target="debug" />
		<ant inheritAll="false" dir="${release.name}" target="buildJar" />
		<ant inheritAll="false" dir="${release.name}" target="javadoc" />
		<ant inheritAll="false" dir="${release.name}" target="clean" />

		<delete dir="${release.name}/build"/>
		<zip destfile="${release.name}.zip" basedir="${release.name}"/>
		<tar destfile="${release.name}.tar" basedir="${release.name}"/>
		<gzip zipfile="${release.name}.tar.gz" src="${release.name}.tar"/>
		<delete file="${release.name}.tar"/>
	</target>

    <target name="publish-doc" depends="properties">
        <input message="scp password for ${env.USER}@shell.sourceforge.net:" addproperty="scp.password"/>
        <scp
            knownhosts="${env.HOME}/.ssh/known_hosts"
            todir="${env.USER}:${scp.password}@shell.sourceforge.net:/home/groovytools/htdocs"
        >
            <fileset dir=".">
                <include name="NOTICE.txt"/>
                <include name="LICENSE.txt"/>
                <include name="index.html"/>
            </fileset>

            <fileset dir="doc">
                <include name="CHANGES"/>
                <include name="LICENSE"/>
                <include name="*.html"/>
                <include name="api/**/*.html"/>
                <include name="api/**/*.css"/>
            </fileset>
        </scp>
    </target>

    <target name="publish-release" depends="properties">
        <input
            message="ftp password for anonymous@upload.sourceforge.net:"
            addproperty="ftp.password"/>

        <ftp
            server="upload.sourceforge.net"
            userid="anonymous"
            password="${ftp.password}"
            remotedir="incoming"
            binary="true"
        >
            <fileset dir=".">
                <include name="${release.name}.zip"/>
                <include name="${release.name}.tar.gz"/>
            </fileset>
        </ftp>

    </target>

</project>
